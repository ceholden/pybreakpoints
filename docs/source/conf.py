# -*- coding: utf-8 -*-
#
# plants documentation build configuration file, created by
# sphinx-quickstart on Wed Jul 19 11:01:10 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
import datetime as dt
import os
from pathlib import Path
import sys

_YEAR = dt.datetime.utcnow().year

PACKAGE_NAME = 'pybreakpoints'
REPO = 'https://github.com/ceholden/pybreakpoints/'

CONFPY = Path(__file__)
DOCS = CONFPY.parent.parent
PACKAGE = DOCS.parent.joinpath(PACKAGE_NAME)

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
sys.path.insert(0, str(PACKAGE.parent.absolute()))

# General information about the project.
project = u'plants'
copyright = u'2018{0}, Chris Holden'.format(
    _YEAR,
    ' - {0}'.format(_YEAR) if _YEAR != 2017
    else ''
)
author = u'Chris Holden'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
from pybreakpoints._version import get_versions  # noqa
_version_info = get_versions()
_version = _version_info['version']
# The short X.Y version.
version = _version.split('+')[0]
# The full version, including alpha/beta/rc tags.
release = _version

# -- General configuration ------------------------------------------------
# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '1.4'
# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autosummary',
    'sphinx.ext.autodoc',
    'sphinx.ext.coverage',
    'sphinx.ext.ifconfig',
    'sphinx.ext.intersphinx',
    'sphinx.ext.githubpages',
    'sphinx.ext.mathjax',
    'sphinx.ext.todo',
    'sphinx.ext.napoleon',
    'sphinx.ext.viewcode',
]
# autodoc_member_order = 'groupwise'

extlinks = {
    'issue': (REPO + '/issues/%s', 'GH#'),
    'pr': (REPO + '/pull/%s', 'GH#'),
    'commit': (REPO + '/commits/master/%s', 'GH@')
}

intersphinx_mapping = {
    'numpy': ('http://docs.scipy.org/doc/numpy/', None),
    'pandas': ('http://pandas.pydata.org/pandas-docs/stable/', None),
    'python': ('https://docs.python.org/3.5/', None),
    'shapely': ('http://toblerity.org/shapely/', None),
    'sklearn': ('http://scikit-learn.org/stable', None),
    'rasterio': ('https://mapbox.github.io/rasterio/', None),
    'xarray': ('http://xarray.pydata.org/en/stable/', None),
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'


# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

latex_elements = {
    'preamble': r'''
        \usepackage{amsmath}
        \usepackage{bm}
        \usepackage{color}
    '''
}

napoleon_use_ivar = True

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
on_rtd = os.environ.get('READTHEDOCS', None) == 'True'
if not on_rtd:  # only import and set the theme if we're building docs locally
    import sphinx_rtd_theme
    html_theme = 'sphinx_rtd_theme'
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_context = dict(
    display_github=True,
    github_user="ceholden",
    github_repo="pybreakpoints",
    github_version="master",
    conf_py_path="/docs/source/",
    source_suffix=".rst",
)
html_show_sourcelink = False
